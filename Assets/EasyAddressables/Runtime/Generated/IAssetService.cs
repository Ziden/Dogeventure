//
// [ATTENTION]
// AUTO GENERATED BY EASY ADDRESSABLES //
// DO NOT MODIFY THIS FILE MANUALLY !!!
//

using System.Collections.Generic;
using System;
using System.Threading.Tasks;
using EasyAddressables;
using UnityEngine;
using UnityEngine.SceneManagement;
using UnityEngine.UIElements;
namespace GameAddressables
{
	public interface IAssetService
	{
		public Task GetAudioClipAsync(AssetSoundEffect id, Action<AudioClip> onComplete=null);
		public Task GetGameObjectAsync(ObjectPrefab id, Action<GameObject> onComplete=null);
		public Task InstantiateObjectPrefabAsync(ObjectPrefab id, Action<GameObject> onComplete);
		public Task GetGameObjectAsync(CollectiblePrefab id, Action<GameObject> onComplete=null);
		public Task InstantiateCollectiblePrefabAsync(CollectiblePrefab id, Action<GameObject> onComplete);
		public Task GetGameObjectAsync(WeaponPrefab id, Action<GameObject> onComplete=null);
		public Task InstantiateWeaponPrefabAsync(WeaponPrefab id, Action<GameObject> onComplete);
		public Task GetSceneAsync(AssetScene id, Action<Scene> onComplete=null);
		public Task GetGameObjectAsync(ShieldPrefab id, Action<GameObject> onComplete=null);
		public Task InstantiateShieldPrefabAsync(ShieldPrefab id, Action<GameObject> onComplete);
		public Task GetGameObjectAsync(VfxPrefab id, Action<GameObject> onComplete=null);
		public Task InstantiateVfxPrefabAsync(VfxPrefab id, Action<GameObject> onComplete);
		public Task GetScriptableObjectAsync(ConfigAsset id, Action<ScriptableObject> onComplete=null);
		public Task GetSpriteAsync(AssetSprite id, Action<Sprite> onComplete=null);
		public Task GetTexture2DAsync(AssetTexture id, Action<Texture2D> onComplete=null);
		public Task GetMaterialAsync(AssetMaterial id, Action<Material> onComplete=null);
		public Task GetVisualTreeAssetAsync(AssetUIScreen id, Action<VisualTreeAsset> onComplete=null);
		public Task GetPanelSettingsAsync(AssetPanelSettings id, Action<PanelSettings> onComplete=null);
		public Task GetFontAsync(AssetFont id, Action<Font> onComplete=null);
		public Task GetGameObjectAsync(AssetGameObject id, Action<GameObject> onComplete=null);
		public Task InstantiateAssetGameObjectAsync(AssetGameObject id, Action<GameObject> onComplete);
	}
}
